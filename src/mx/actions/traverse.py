""" traverse.py  -- execute a traverse action """

# System
from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from mx.method import Method  # TOOD: Replace with Activity after refactoring State/Assigner Activities

# Model Integration
from pyral.relation import Relation

# MX
from mx.db_names import mmdb
from mx.actions.action import Action


class Traverse(Action):

    def __init__(self, action_id: str, activity: "Method"):
        """

        :param action_id:
        :param activity:
        """
        super().__init__(anum=activity.anum, action_id=action_id)

        # All traverse actions in activity
        Relation.semijoin(db=mmdb, rname1=activity.method_rvname, rname2="Traverse_Action")
        # Find just my action
        R = f"ID:<{action_id}>"
        Relation.restrict(db=mmdb, restriction=R, svar_name="traverse_action_r")
        Relation.print(db=mmdb, table_name="traverse action")

        # Now get all of the hops in the path
        hops_r = Relation.semijoin(db=mmdb, rname1="traverse_action_r", rname2="Hop")
        Relation.print(db=mmdb, table_name="hops")

        # Sort them by hop number so that we proceed 1, 2, ...
        hops = hops_r.body
        hops.sort(key=lambda d: int(d['Number']))  # Sorts in place
        # TODO: First hop is from F1 relation variable
        pass
        # source = Relation
        # for h in hops:
        #     if f
        #     Relation.semijoin(db=)
        #     pass
        pass

        # perform a series of semi-joins following the path
        # set value of destination flow with the relation name (generated by RVN)

        pass

        # R = f"Phrase:<{phrase}>, Domain:<{cls.domain}>"
        # result = Relation.restrict(db=db, relation='Perspective', restriction=R)


